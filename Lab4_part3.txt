// 
 /**
* Title:		Lab 4 part3
* C File        Lab4.c  	
* Platform:     PICmicro PIC16F877A @ 4 Mhz	
* Written by:	Se√°n Rooney		
*
* Date:			27/10/2022
*
* Function:		to get leds to light
*
*/


// CONFIG
#pragma config FOSC = XT        // Oscillator Selection bits (XT oscillator)
#pragma config WDTE = OFF       // Watchdog Timer Enable bit (WDT disabled)
#pragma config PWRTE = OFF      // Power-up Timer Enable bit (PWRT disabled)
#pragma config BOREN = OFF      // Brown-out Reset Enable bit (BOR disabled)
#pragma config LVP = OFF        // Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit (RB3 is digital I/O, HV on MCLR must be used for programming)
#pragma config CPD = OFF        // Data EEPROM Memory Code Protection bit (Data EEPROM code protection off)
#pragma config WRT = OFF        // Flash Program Memory Write Enable bits (Write protection off; all program memory may be written to by EECON control)
#pragma config CP = OFF         // Flash Program Memory Code Protection bit (Code protection off)

// #pragma config statements should precede project file includes.
// Use project enums instead of #define for ON and OFF.

#include <xc.h>
#include <stdio.h>      // Include Standard I/O header file
	// Include LCD header file. This file must be in same
                        // directory as source main source file.

#ifndef _XTAL_FREQ
 // Unless already defined assume 4MHz system frequency
 // This definition is required to calibrate the delay functions, __delay_us() and __delay_ms()
 #define _XTAL_FREQ 4000000
#endif 


// Definitions____________________________________________________________
#define SW1 RB0			// Assign Label SW1 to PortB bit 0 (RB0)
#define LED1 RD0
#define LED2 RD1
#define LED3 RD2
#define LED4 RD3
#define CLOSED 0
#define OPEN 1
#define ON 1
#define OFF 0

void setup();
void loop();
void getChar();


void main() {
    setup();
    while(!TXIF);
    TXREG='Welcome to lab 4';
    while (1) {
        loop();
    }
}
void setup(void){
    TRISC=0xC0;
    TRISD=0x00;
    TXSTA=0x24;
    RCSTA=0x90;
    SPBRG=0x19;
}

void loop(void){
    getChar();
}
void getChar(void){
    while(!RCIF);
    char r=RCREG;
    if(r=='1'){
        LED1=0;
    }
    if(r=='2'){
        LED2=0;
    }
    if(r=='3'){
        LED3=0;
    }
    if(r=='4'){
        LED4=0;
    }
    if(r=='0'){
        LED1=1;
        LED2=1;
        LED3=1;
        LED4=1;
    }
}